openapi: 3.0.3
info:
  title: ATLAS feeding_data
  description: Send planned rations and get actual feeding reports into the system.
  version: '0.0.2'
servers:
  - url: http://localhost:8080
    description: Inferred Url
security: 
  - "bearerAuth": []
paths:
  /feedingreport:
    get:
      summary: feedingReport
      parameters:
        - name: start_date
          in: query
          description: Start date from when to fetch data, ISO8601 date
          required: true
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: End date from when to fetch data, ISO8601 date
          required: true
          schema:
            type: string
            format: date
        - name: ration_ref
          in: query
          description: ration_ref represents identification for connecting the rations between systems
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeDailyReport'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /ration:
    post:
      summary: importRation
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Validation failed
components:
  schemas:
    URN:
        type: "string"
        pattern: "^urn:[a-z][a-z0-9_.\\-]*:[\\w-.]+"
        description: "Uniform resource name of a field with the syntax `urn:<service_id>:<internal_id>`. <service_id> must be the id of a valid and active ATLAS service"
        example: 'urn:animal_data:69d4a4ec-e8a4-4768-a299-14a7a9acd1b1'
    RationFeedstuffRequest:
      title: RationFeedstuffRequest
      type: object
      properties:
        amound_drymatter:
          type: number
          description: Amount DM of feedstuff in ration
          format: double
        cost_kg_drymatter:
          type: number
          description: Cost DM per kg of ration feedstuff
          format: double
          example: 0.4125
        drymatter_percentage:
          type: number
          description: DM percentage of ration feedstuff
          format: double
        feedstuff_id:
          type: string
          description: feedstuff_id represent identification number of ration feedstuff between systems
          example: 49c78036-acfb-11ed-afa1-0242ac120002
        name:
          type: string
          description: Name of ration feedstuff
          example: Sojabohnen (gesch., Bioprofin)
        type:
          type: string
          description: Feed type of feedstuff in ration, todo check completeness
          enum: 
            - Dry forage
            - Corn silage
            - Alfalfa silage
            - Grass silage
            - Other wet forage
            - By-productGrain
            - Fatty acid source
            - Triglycerides
            - Cp source
            - Rup source
            - Minerals
            - Miscellaneous
            - Vitamin
            - Premix
            - Forage
            - Concentrate
            - Commercial
            - Water
          example: Dry forage
      required:
        - amount_drymatter
        - drymatter_percentage
        - feedstuff_id
        - name
        - type
    RationRequest:
      title: RationRequest
      type: object
      properties:
        ration_ref:
          type: string
          description: client-supplied reference to that ration. If ration_ref is not provided, new ration will be created. If ration_ref is already known, existing ration will be updated.
          example: 62559890-acfb-11ed-afa1-0242ac120002
        feedstuffs:
          type: array
          description: Order of feedstuff in this array will be used as order of feedstuff in mixer wagon
          items:
            $ref: '#/components/schemas/RationFeedstuffRequest'
        pen_allocations:
          type: array
          items:
            $ref: '#/components/schemas/PenAllocation'
        name:
          type: string
          description: Ration name
          example: Ration Test 1
        start_date: 
          type: string
          format: date
          description: Start date of ration, as ISO8601 date
      required:
        - feedstuffs
        - pens
        - name
    PenAllocation:
      title: Pen
      type: object
      description: Describes which pen get how much freshmass per animal. Use the number of animals from the animal_data GET /pens interface
      properties:
        feed_intake_per_animal:
          type: number
          description: Feed intake per animal in freshmass kg per day
          format: double
          example: 31.5
        urn:
          $ref: "#/components/schemas/URN"
    RecipeDailyReport:
      title: RecipeDailyReport
      type: object
      properties:
        loadings:
          type: array
          description: List of loadings per day
          items:
            $ref: '#/components/schemas/Loadings'
        ration_ref:
          type: string
          description: ration_ref represent identification of ration between systems
          example: 40ac1b42-acfb-11ed-afa1-0242ac120002
    Unloadings:
      title: Unloadings
      type: object
      properties:
        start_date:
          type: string
          description: Unloading start date and time (UTC time)
          example: '2020-11-06T08:35:53Z'
          format: date-time
        end_date:
          type: string
          description: Unloading finish date and time (UTC time)
          example: '2020-11-06T09:35:53Z'
          format: date-time
        pen_urn:
          $ref: "#/components/schemas/URN"
        corrected_number_of_animals:
          type: integer
          description: Number of animals in the pen. Can be corrected by the user for that single feeding
          format: int64
          example: 62
        unloaded_amount_kg:
          type: number
          description: Unloaded amount in this pen from feeding load in kg freshmass for this unloading
          format: double
          example: 900
        calculated_amount_kg:
          type: number
          description: Calculated amount of feed in feeding load in kg freshmass for this unloading
          format: double
          example: 870
    Loadings:
      title: Loadings
      type: object
      properties: 
        start_date:
          type: string
          description: Loading start date and time (UTC time)
          example: '2020-11-06T08:35:53Z'
          format: date-time
        end_date:
          type: string
          description: Loading finish date and time (UTC time)
          example: '2020-11-06T09:35:53Z'
          format: date-time
        feedstuffs:
          type: array
          description: List of feedstuffs loaded into feedwagon
          items:
            $ref: '#/components/schemas/FeedstuffsLoading'
        unloadings:
          type: array
          description: List of unloadings per day
          items:
            $ref: '#/components/schemas/Unloadings'
    FeedstuffsLoading:
      title: Ingredients
      type: object
      properties:
        calculated_amount_kg:
          type: number
          description: Calculated amount of feed in feeding load in kg freshmass
          format: double
          example: 780
        feedstuff_id:
          type: string
          description: feedstuff id, same as in ration feedstuffs
          example: f627dfc6-ad03-11ed-afa1-0242ac120002
        loaded_amount_kg:
          type: number
          description: Actual amount of feedstuff in feeding load in kg freshmass
          format: double
          example: 750
  securitySchemes:
    bearerAuth: 
      type: "http"
      scheme: "bearer"
      
