openapi: 3.0.3
info:
  title: ATLAS feeding_data
  description: Send planned rations and get actual feeding reports into the system.
  contact: {}
  license: {}
  version: '1'
servers:
  - url: http://localhost:8080
    description: Inferred Url
tags:
  - name: report-applications-controller
    description: Report Controller
paths:
  /api/v1/feedingreport:
    get:
      tags:
        - report-applications-controller
      summary: feedingReport
      operationId: feedingReportUsingGET
      parameters:
        - name: start_date
          in: query
          description: Start date from when to fetch data
          required: true
          style: form
          schema:
            type: string
            format: YYYY-MM-DD
        - name: end_date
          in: query
          description: End date from when to fetch data
          required: true
          style: form
          schema:
            type: string
            format: YYYY-MM-DD
        - name: ration_id
          in: query
          description: RationId represents identification for connecting the rations between systems
          required: true
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipeDailyReport'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - StaticToken:
            - global
  /api/v1/pens:
    get:
      tags:
        - report-applications-controller
      summary: pens
      operationId: pensUsingGET
      parameters:
        - name: barn_id
          in: query
          description: Id of a barn for identifying which pens to send back
          required: true
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pen'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - StaticToken:
            - global
  /api/v1/ration:
    post:
      tags:
        - report-applications-controller
      summary: importRation
      operationId: importRationUsingPOST
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - StaticToken:
            - global
components:
  schemas:
    RationFeedstuffRequest:
      title: RationFeedstuffRequest
      type: object
      properties:
        amountAsFed:
          type: number
          description: Amount as fed (fresh matter amount) of feedstuff in ration
          format: double
        amountDm:
          type: number
          description: Amount DM of feedstuff in ration
          format: double
        costAsFed:
          type: number
          description: Cost of amount as fed of feedstuff in ration
          format: double
        costDm:
          type: number
          description: Cost DM per kg of ration feedstuff
          format: double
          example: 41.25
        dm:
          type: number
          description: DM percentage of ration feedstuff
          format: double
        ingredientId:
          type: string
          description: IngredientId represent identification number of ration feedstuff between systems
          example: 49c78036-acfb-11ed-afa1-0242ac120002
        feedName:
          type: string
          description: Name of ration feedstuff
          example: Sojabohnen (gesch., Bioprofin)
        feedType:
          type: string
          description: Feed type of feedstuff in ration
          example: Dry forage,Corn silage,Alfalfa silage, Grass silage, Other wet forage, By-productGrain ,Fatty acid source ,Triglycerides, Cp source, Rup source, Minerals, Miscellaneous, Vitamin, Premix, Forage, Concentrate, Commercial
        orderNumber:
          type: integer
          description: Order of feedstuff in ration witch will be used as order of feedstuff in mixer wagon
          format: int32
          example: 0
    RationRequest:
      title: RationRequest
      type: object
      properties:
        costDm:
          type: number
          description: Cost of DM per KG
          format: double
          example: 80.2
        dm:
          type: number
          description: DM (Dry matter) percentage of ration
          format: double
        ingredientId:
          type: string
          description: IngredientId represent identification number of ration between systems
          example: 62559890-acfb-11ed-afa1-0242ac120002
        rationFeedstuffs:
          type: array
          items:
            $ref: '#/components/schemas/RationFeedstuffRequest'
        pens:
          type: array
          items:
            $ref: '#/components/schemas/Pen'
        rationName:
          type: string
          description: Ration name
          example: Ration Test 1
    Pen:
      title: Pen
      type: object
      properties:
        feedIntakePerAnimalKg:
          type: number
          description: Feed intake per animal (unit KG)
          format: double
        id:
          type: integer
          description: Pen ID
          format: int64
          example: 12
        numberOfAnimals:
          type: integer
          description: Number of animals in pen
          format: int32
          example: 100
        penName:
          type: string
          description: Pen name
          example: Test pen
    RecipeDailyReport:
      title: RecipeDailyReport
      type: object
      properties:
        loadings:
          type: array
          description: List of loadings per day
          items:
            $ref: '#/components/schemas/Loadings'
        unloadings:
          type: array
          description: List of unloadings per day
          items:
            $ref: '#/components/schemas/Unloadings'
        rationId:
          type: string
          description: RationId represent identification number of ration between systems
          example: 40ac1b42-acfb-11ed-afa1-0242ac120002
    Unloadings:
      title: Unloadings
      type: object
      properties:
        startDate:
          type: string
          description: Unloading start date and time (UTC time)
          example: '2020-11-06T08:35:53Z'
          format: date-time
        endDate:
          type: string
          description: Unloading finish date and time (UTC time)
          example: '2020-11-06T09:35:53Z'
          format: date-time
        penId:
          type: integer
          description: Pen ID
          format: int64
          example: 68
        penNumberOfAnimals:
          type: integer
          description: Number of animals in the pen
          format: int64
          example: 100
        penName:
          type: string
          description: Name of the used pen
          example: Test
        unloadedAmountKg:
          type: number
          description: Unloaded amount in pen from feeding load (unit KG)
          format: double
          example: 900
    Loadings:
      title: Loadings
      type: object
      properties: 
        startDate:
          type: string
          description: Loading start date and time (UTC time)
          example: '2020-11-06T08:35:53Z'
          format: date-time
        endDate:
          type: string
          description: Loading finish date and time (UTC time)
          example: '2020-11-06T09:35:53Z'
          format: date-time
        ingredients:
          type: array
          description: List of ingredients
          items:
            $ref: '#/components/schemas/Ingredients'
    Ingredients:
      title: Ingredients
      type: object
      properties:
        calculatedAmountKg:
          type: number
          description: Calculated amount of feed in feeding load (unit KG)
          format: double
          example: 780
        feedId:
          type: string
          description: Ingredient id
          example: f627dfc6-ad03-11ed-afa1-0242ac120002
        loadedAmountKg:
          type: number
          description: Actual amount of feedstuff in feeding load (unit KG)
          format: double
          example: 750
  securitySchemes:
    StaticToken:
      type: apiKey
      name: Static token
      in: header
